<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Create your first serverless function with Red Hat OpenShift Serverless Functions</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/8blF8dgF8_4/" /><category term="Java" /><category term="Kubernetes" /><category term="Node.js" /><category term="Quarkus" /><category term="Serverless" /><category term="CloudEvents" /><category term="Knative" /><category term="knative eventing" /><category term="openshift" /><category term="serverless function" /><author><name>Naina Singh</name></author><id>https://developers.redhat.com/blog/?p=841747</id><updated>2021-01-04T08:00:30Z</updated><published>2021-01-04T08:00:30Z</published><content type="html">&lt;p&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Serverless&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; is a powerful and popular paradigm where you don’t have to worry about managing and maintaining your application infrastructure. In the serverless context, a &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;function&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; is a single-purpose piece of code created by the developer but run and monitored by the managed infrastructure. A serverless function’s value is its simplicity and swiftness, which can entice even those who don’t consider themselves developers.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;This article introduces you to Red Hat OpenShift Serverless Functions, a new developer preview feature in&lt;/span&gt;&lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/blog/introducing-using-openshift-serverless-event-driven-applications"&gt; &lt;span style="font-weight: 400;"&gt;Red Hat OpenShift Serverless 1.11&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. I will provide an overview, then present two example applications demonstrating Serverless Functions with Node.js. Please check the&lt;/span&gt;&lt;a target="_blank" rel="nofollow" href="https://openshift-knative.github.io/docs/docs/functions/quickstart-functions.html"&gt;&lt;span style="font-weight: 400;"&gt; OpenShift Serverless Functions Quick Start&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; document for the example prerequisites.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;OpenShift Serverless Functions&lt;/h2&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/serverless-getting-started?extIdCarryOver=true&amp;#38;sc_cid=701f2000000u72fAAA#knative-eventing_serverless-getting-started"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat OpenShift Serverless&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; leverages the power of &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Knative&lt;/a&gt; to deliver serverless, event-driven applications that scale on demand. With the&lt;/span&gt;&lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/blog/introducing-using-openshift-serverless-event-driven-applications"&gt; &lt;span style="font-weight: 400;"&gt;OpenShift Serverless 1.11&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; release, we have added the new Serverless Functions feature, currently available as a developer preview. Serverless Functions comes with pre-defined templates and runtimes and provides a local developer experience. Together, these features make it very easy to create serverless applications.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;How to get Serverless Functions&lt;/h3&gt; &lt;p&gt;Serverless Functions is bundled with the OpenShift Serverless command-line interface (CLI), &lt;code&gt;kn&lt;/code&gt;. When you use an OpenShift Serverless Operator for installation, OpenShift Serverless is automatically deployed, and managed on OpenShift. You can access Serverless Functions with the following command:&lt;/p&gt; &lt;pre&gt;$ kn func &lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: See the &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.6/serverless/installing_serverless/installing-openshift-serverless.html"&gt;OpenShift Serverless documentation&lt;/a&gt; for installation instructions.&lt;/p&gt; &lt;h3&gt;What&amp;#8217;s included?&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Serverless Functions comes with predefined runtimes for popular languages such as&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt; &lt;span style="font-weight: 400;"&gt;Quarkus&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;,&lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt; &lt;span style="font-weight: 400;"&gt;Node.js&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and&lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/category/go/"&gt; &lt;span style="font-weight: 400;"&gt;Go&lt;/span&gt;&lt;/a&gt;. These runtimes are based on &lt;a target="_blank" rel="nofollow" href="https://buildpacks.io/"&gt;Cloud Native Buildpacks&lt;/a&gt;. After you choose a runtime, Serverless Functions creates the appropriate project scaffolding so that you can focus on writing business logic. Serverless Functions also includes a local developer experience to support a quick &lt;a href="https://developers.redhat.com/blog/tag/inner-loop/"&gt;inner loop&lt;/a&gt; of iterative development and testing.&lt;/p&gt; &lt;h3&gt;Invoking Serverless Functions&lt;/h3&gt; &lt;p&gt;You can invoke Serverless Functions using plain HTTP requests or &lt;a target="_blank" rel="nofollow" href="https://cloudevents.io"&gt;CloudEvents&lt;/a&gt; with OpenShift Serverless eventing components. OpenShift Serverless Functions comes with out-of-the-box project templates to jumpstart your code for both the HTTP and CloudEvents trigger types.&lt;/p&gt; &lt;p&gt;Next, we&amp;#8217;ll explore two examples. For the first example, we&amp;#8217;ll configure Serverless Functions for HTTP requests. For the second example, we&amp;#8217;ll use CloudEvents. Please use the Serverless Functions &lt;a target="_blank" rel="nofollow" href="https://openshift-knative.github.io/docs/docs/functions/quickstart-functions.html"&gt;quick start document&lt;/a&gt; to ensure that you have the example prerequisites installed.&lt;/p&gt; &lt;h2&gt;Example 1: Create a serverless function for HTTP requests&lt;/h2&gt; &lt;p&gt;Once you have the prerequisites installed, create a new directory for your serverless function. Once you are in the directory, execute the following command to create and deploy a new serverless function:&lt;/p&gt; &lt;pre&gt;$  kn func create  &lt;/pre&gt; &lt;p&gt;By default, the function is initialized with a project template for plain HTTP requests. You can choose your programming language by entering &lt;code&gt;Node.js&lt;/code&gt;, &lt;code&gt;Quarkus&lt;/code&gt;, or &lt;code&gt;Go&lt;/code&gt; as the value for the &lt;code&gt;-l&lt;/code&gt; flag. If you do not provide a runtime with the &lt;code&gt;-l&lt;/code&gt; flag, the default runtime is Node.js. We&amp;#8217;ll use Node.js for both of our examples.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;span style="font-weight: 400;"&gt;You can use the -c flag to prompt the CLI to guide you in creating your first function through the interactive developer experience, which prompts you to add the language and event values. Type -help anytime for assistance.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;The Node.js runtime&lt;/h3&gt; &lt;p&gt;By default, entering the command &lt;code&gt;$  kn func create&lt;/code&gt; creates the scaffolding for a function that is triggered by a plain HTTP request. The scaffolding for our default Node.js runtime includes &lt;code&gt;index.js&lt;/code&gt;, &lt;code&gt;package.json&lt;/code&gt;, and &lt;code&gt;func.yaml&lt;/code&gt; files. We can extend the &lt;code&gt;index.js&lt;/code&gt; base code to develop our serverless function.&lt;/p&gt; &lt;p&gt;As a start, let&amp;#8217;s add a return message of &lt;code&gt;Greeting &amp;#60;username&amp;#62;&lt;/code&gt; in the provided &lt;code&gt;handleGet(context)&lt;/code&gt; method. Figure 1 shows the &lt;code&gt;handleGet&lt;/code&gt; function in &lt;code&gt;index.js&lt;/code&gt;.&lt;/p&gt; &lt;div id="attachment_843747" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-2.32.33-PM.png"&gt;&lt;img aria-describedby="caption-attachment-843747" class="wp-image-843747" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-2.32.33-PM-300x124.png" alt="The handleGet function accepts a context object and returns the word 'Greetings' with the name provided. If no name is provided, the word 'stranger' is inserted instead." width="640" height="264" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-2.32.33-PM-300x124.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-2.32.33-PM-768x317.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-18-at-2.32.33-PM.png 799w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-843747" class="wp-caption-text"&gt;Figure 1: The handleGet(context) function.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Deploy the function&lt;/h3&gt; &lt;p&gt;Next, we&amp;#8217;ll deploy this function to our OpenShift cluster. Be sure that you are logged into an OpenShift cluster from your local environment, then type the following command with the project name or cluster namespace:&lt;/p&gt; &lt;pre&gt;$ kn func deploy  -n &amp;#60;namespace&amp;#62; &lt;/pre&gt; &lt;p&gt;Remember that you can use the &lt;code&gt;-c&lt;/code&gt; flag for an interactive experience.&lt;/p&gt; &lt;p&gt;Serverless Functions will prompt you to provide a container registry where the resulting image is uploaded. DockerHub is the default registry, but you can use any public image registry.&lt;/p&gt; &lt;p&gt;Now, go to the Topology view in the OpenShift developer console. You will see your function deployed as a Knative service, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_841797" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.30.15-PM.png"&gt;&lt;img aria-describedby="caption-attachment-841797" class="wp-image-841797 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.30.15-PM-1024x546.png" alt="The Topology view lets you see the serverless function deployed on your OpenShift cluster. The highlighted routes make it easy to access the deployed function from your browser." width="640" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.30.15-PM-1024x546.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.30.15-PM-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.30.15-PM-768x410.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.30.15-PM.png 1361w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841797" class="wp-caption-text"&gt;Figure 2: View the deployed serverless function on your OpenShift cluster.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Test the function&lt;/h3&gt; &lt;p&gt;We can use the routes URL shown in Figure 2 to test our deployed serverless function. Enter the following command to delete the function from your cluster:&lt;/p&gt; &lt;pre&gt;$ kn func delete &lt;/pre&gt; &lt;p&gt;For a &lt;strong&gt;local developer experience&lt;/strong&gt;, we can test serverless functions using standard language tooling or in a container running locally. Use the following command on the &lt;code&gt;kn&lt;/code&gt; command-line to build the container image:&lt;/p&gt; &lt;pre&gt;$ kn func build &lt;/pre&gt; &lt;p&gt;To test the built image container in a local environment, enter:&lt;/p&gt; &lt;pre&gt;$ kn func run  &lt;/pre&gt; &lt;p&gt;Use the &lt;code&gt;curl&lt;/code&gt; command to test your deployed image:&lt;/p&gt; &lt;pre&gt;$ curl ‘https://localhost:8080/?name=Universe’ &lt;/pre&gt; &lt;p&gt;You may also use the browser to see the results, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_841807" style="width: 496px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-15-at-3.03.24-PM.png"&gt;&lt;img aria-describedby="caption-attachment-841807" class="wp-image-841807 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-15-at-3.03.24-PM.png" alt="Localhost on port 8080 is being accessed with the name 'Universe' as a data for the deployed serverless function's 'get' method. The browser displays 'Greetings Universe!'" width="486" height="215" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-15-at-3.03.24-PM.png 486w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-15-at-3.03.24-PM-300x133.png 300w" sizes="(max-width: 486px) 100vw, 486px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841807" class="wp-caption-text"&gt;Figure 3: The deployed function being called from the browser.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Example 2: Create a serverless function for CloudEvents&lt;/h2&gt; &lt;p&gt;For our second example, we&amp;#8217;ll create a serverless function that responds to CloudEvents rather than HTTP requests. Before you start, please check the &lt;a target="_blank" rel="nofollow" href="https://openshift-knative.github.io/docs/docs/functions/quickstart-functions.html"&gt;quick start document&lt;/a&gt; to ensure that you have the prerequisites installed for this example.&lt;/p&gt; &lt;h3&gt;Create a new serverless function project&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ll use the same command that we used previously to create a new project. This time, however, we will provide an &lt;code&gt;events&lt;/code&gt; value for the &lt;code&gt;-t&lt;/code&gt; flag. Alternatively, we could use the &lt;code&gt;-c&lt;/code&gt; flag for interactive prompts.&lt;/p&gt; &lt;pre&gt;$  kn func create -l &amp;#60;node|quarkus&amp;#62; -t  events   &lt;/pre&gt; &lt;p&gt;To receive CloudEvents, we will need Knative eventing components, so we&amp;#8217;ll set that up next.&lt;/p&gt; &lt;p&gt;Log in to the OpenShift developer console and navigate to the Developer perspective. Click the &lt;b&gt;Add&lt;/b&gt; section to see the &lt;b&gt;Channel&lt;/b&gt; tile highlighted in Figure 4. This tile creates a default channel.&lt;/p&gt; &lt;div id="attachment_841817" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.02.52-AM.png"&gt;&lt;img aria-describedby="caption-attachment-841817" class="wp-image-841817 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.02.52-AM-1024x360.png" alt="The Channel is highlighted in red." width="640" height="225" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.02.52-AM-1024x360.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.02.52-AM-300x105.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.02.52-AM-768x270.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841817" class="wp-caption-text"&gt;Figure 4: Locate the Channel tile in the OpenShift developer console (notice the tile in red).&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now, we need an event source. For that, we will go back to the &lt;b&gt;Add&lt;/b&gt; section and click on the &lt;b&gt;Event Source&lt;/b&gt; tile shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_841827" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.47.22-PM.png"&gt;&lt;img aria-describedby="caption-attachment-841827" class="wp-image-841827 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.47.22-PM-1024x370.png" alt="The Event Source tile is highlighted in red." width="640" height="231" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.47.22-PM-1024x370.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.47.22-PM-300x108.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-10-at-11.47.22-PM-768x278.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841827" class="wp-caption-text"&gt;Figure 5: Locate the Event Source tile in the OpenShift developer console.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, as shown in Figure 6, we will select and configure a ping source as the event source for our deployed function. Note that the &lt;b&gt;Sink&lt;/b&gt; section displays the deployed function and the channel we&amp;#8217;ve just created. For this example, we will choose the channel as the sink for our event source.&lt;/p&gt; &lt;div id="attachment_841837" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.19.32-AM.png"&gt;&lt;img aria-describedby="caption-attachment-841837" class="wp-image-841837 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.19.32-AM-1024x486.png" alt="Sink options for the ping event source are the previously created channel and the deployed OpenShift serverless function." width="640" height="304" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.19.32-AM-1024x486.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.19.32-AM-300x142.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.19.32-AM-768x365.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841837" class="wp-caption-text"&gt;Figure 6: Select Channel as the sink option for the ping event source.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;After creating the event source, we can view all the components in the Topology view, as shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_841847" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.23.14-AM.png"&gt;&lt;img aria-describedby="caption-attachment-841847" class="wp-image-841847 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.23.14-AM-1024x496.png" alt="The topology view shows the serverless function, event source, and channel components." width="640" height="310" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.23.14-AM-1024x496.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.23.14-AM-300x145.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.23.14-AM-768x372.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.23.14-AM.png 1304w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841847" class="wp-caption-text"&gt;Figure 7: The deployed serverless function, event source, and channel.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To add a trigger to the deployed function, hover over the channel, then click and drag the blue line to connect the channel to the function. Figure 8 shows the full deployment details in the Topology view.&lt;/p&gt; &lt;div id="attachment_841857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.36.05-AM.png"&gt;&lt;img aria-describedby="caption-attachment-841857" class="wp-image-841857 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.36.05-AM-1024x467.png" alt="The serverless function is connected to the event source via the channel. The serverless function pod is active and receiving events." width="640" height="292" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.36.05-AM-1024x467.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.36.05-AM-300x137.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.36.05-AM-768x350.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/Screen-Shot-2020-12-11-at-12.36.05-AM.png 1382w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-841857" class="wp-caption-text"&gt;Figure 8: Connect the serverless function to the event source via the channel.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When the function starts receiving events, Knative spins up the function pod, and the logs show the call to the function. We have just created and deployed an OpenShift serverless function.&lt;/p&gt; &lt;h2&gt;Looking forward&lt;/h2&gt; &lt;p&gt;OpenShift Serverless Functions is available as a developer preview in OpenShift Serverless 1.11. It is available to all OpenShift users. We will release new features in the coming months, and your feedback is greatly appreciated.&lt;/p&gt; &lt;p&gt;This article is the first in a series introducing Serverless Functions. The next article in this series will introduce you to creating serverless functions with &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt;, the supersonic, subatomic &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java&lt;/a&gt; runtime. In the meantime, you can learn more about OpenShift Serverless Functions by reading the &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/blog/introducing-using-openshift-serverless-event-driven-applications"&gt;OpenShift Serverless 1.11 release announcement&lt;/a&gt;, the &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.6/serverless/serverless-getting-started.html"&gt;OpenShift Serverless documentation&lt;/a&gt;, and the &lt;a target="_blank" rel="nofollow" href="https://openshift-knative.github.io/docs/docs/functions/about-functions.html"&gt;OpenShift Serverless Functions documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#38;linkname=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2021%2F01%2F04%2Fcreate-your-first-serverless-function-with-red-hat-openshift-serverless-functions%2F&amp;#038;title=Create%20your%20first%20serverless%20function%20with%20Red%20Hat%20OpenShift%20Serverless%20Functions" data-a2a-url="https://developers.redhat.com/blog/2021/01/04/create-your-first-serverless-function-with-red-hat-openshift-serverless-functions/" data-a2a-title="Create your first serverless function with Red Hat OpenShift Serverless Functions"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2021/01/04/create-your-first-serverless-function-with-red-hat-openshift-serverless-functions/"&gt;Create your first serverless function with Red Hat OpenShift Serverless Functions&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/8blF8dgF8_4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Serverless is a powerful and popular paradigm where you don’t have to worry about managing and maintaining your application infrastructure. In the serverless context, a function is a single-purpose piece of code created by the developer but run and monitored by the managed infrastructure. A serverless function’s value is its simplicity and swiftness, which can [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2021/01/04/create-your-first-serverless-function-with-red-hat-openshift-serverless-functions/"&gt;Create your first serverless function with Red Hat OpenShift Serverless Functions&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2021/01/04/create-your-first-serverless-function-with-red-hat-openshift-serverless-functions/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">841747</post-id><dc:creator>Naina Singh</dc:creator><dc:date>2021-01-04T08:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2021/01/04/create-your-first-serverless-function-with-red-hat-openshift-serverless-functions/</feedburner:origLink></entry><entry><title>How to restrict user authentication in Keycloak during identity brokering</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-yK8YaPzU_Y/" /><category term="Linux" /><category term="Security" /><category term="apache maven" /><category term="identity broker" /><category term="keycloak" /><category term="restrict access" /><category term="User authentication" /><author><name>Siddhartha De</name></author><id>https://developers.redhat.com/blog/?p=816517</id><updated>2020-12-30T08:00:31Z</updated><published>2020-12-30T08:00:31Z</published><content type="html">&lt;p&gt;As per the design, Keycloak imports all users into its local database if the users are authenticated via any third-party identity provider (e.g., Google, Facebook, or Okta). But what if users authenticated through the third-party identity provider have to be restricted—or be allowed only limited access—to applications that are federated with Keycloak? Here&amp;#8217;s how you do it.&lt;br /&gt; &lt;span id="more-816517"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;You first develop a custom authenticator, which will disable the user if the third-party authenticated user is beyond the known list, and place the authenticator in the &lt;code&gt;First Broker Login&lt;/code&gt; authentication flow.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: This article assumes that you are familiar with Keycloak and Maven. &lt;a target="_blank" rel="nofollow" href="https://www.keycloak.org/"&gt;Keycloak&lt;/a&gt; is an open source identity and access management (IAM) tool and is the upstream project for &lt;a href="https://developers.redhat.com/blog/2019/02/07/red-hat-single-sign-on-give-it-a-try-for-no-cost/"&gt;Red Hat&amp;#8217;s single sign-on (SSO) tools&lt;/a&gt;. Many developers use Keycloak or Red Hat&amp;#8217;s SSO tools for enterprise security in production environments.&lt;/p&gt; &lt;h2&gt;Creating a custom authenticator with Keycloak&lt;/h2&gt; &lt;p&gt;Keycloak provides an &lt;a target="_blank" rel="nofollow" href="https://www.keycloak.org/docs/latest/server_development/#_auth_spi"&gt;authentication service provider interface&lt;/a&gt; (SPI) that we&amp;#8217;ll use to write a new custom authenticator. As &lt;a target="_blank" rel="nofollow" href="https://www.keycloak.org/docs/latest/server_development/#packaging-classes-and-deployment"&gt;described in the Keycloak documentation&lt;/a&gt;, we must do the following when we package the custom authenticator:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Package the entire implementation into a single JAR file.&lt;/li&gt; &lt;li&gt;Ensure that the JAR contains a file named &lt;code&gt;org.keycloak.authentication.AuthenticatorFactory&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Locate the &lt;code&gt;org.keycloak.authentication.AuthenticatorFactory&lt;/code&gt; file in the &lt;code&gt;META-INF/services/&lt;/code&gt; directory.&lt;/li&gt; &lt;li&gt;Ensure that it lists the fully qualified class name for each &lt;code&gt;AuthenticatorFactory&lt;/code&gt; implementation.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;The EnableIfRequire class&lt;/h2&gt; &lt;p&gt;To start, we&amp;#8217;ll create two classes. The first is &lt;code&gt;EnableIfRequire.java&lt;/code&gt;, which enables the user post creation if it exists in the list:&lt;/p&gt; &lt;pre&gt;package com.sid.keycloakauthenticator; import java.io.File; import java.io.FileNotFoundException; import java.util.ArrayList; import java.util.Arrays; import java.util.List; import java.util.Scanner; import java.util.logging.Level; import java.util.logging.Logger; import org.keycloak.authentication.AuthenticationFlowContext; import org.keycloak.authentication.authenticators.broker.IdpCreateUserIfUniqueAuthenticator; import org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext; import org.keycloak.broker.provider.BrokeredIdentityContext; import org.keycloak.models.UserModel; /** * * @author sidd */ public class EnableIfRequire extends IdpCreateUserIfUniqueAuthenticator { //private final List users = Arrays.asList("siddhartha.de@mail.com","sidde3"); private static List users = new ArrayList(); static{ File file = new File(System.getProperty("userlist")); //userlist is the reference of file which will hold the list of users if (file.exists()) { try { Scanner sc = new Scanner(file); sc.useDelimiter(","); while (sc.hasNext()) { users.add(sc.next()); } }catch (FileNotFoundException ex) { Logger.getLogger(CreateIfRequire.class.getName()).log(Level.SEVERE, null, ex); } } } @Override protected void userRegisteredSuccess(AuthenticationFlowContext context, UserModel registeredUser, SerializedBrokeredIdentityContext serializedCtx, BrokeredIdentityContext brokerContext) { System.out.println(registeredUser.getUsername()+" User is successfully registered..."); if(!users.contains(registeredUser.getUsername())){ registeredUser.setEnabled(false); //Disable the user if not there in list } } }&lt;/pre&gt; &lt;h2&gt;The EnableIfRequireFactory class&lt;/h2&gt; &lt;p&gt;Next, we create &lt;code&gt;EnableIfRequireFactory.java&lt;/code&gt;, which instantiates the authenticator:&lt;/p&gt; &lt;pre&gt;package com.sid.keycloakauthenticator; import java.util.ArrayList; import java.util.List; import org.keycloak.Config; import org.keycloak.authentication.Authenticator; import org.keycloak.authentication.authenticators.broker.IdpCreateUserIfUniqueAuthenticatorFactory; import org.keycloak.models.KeycloakSession; import org.keycloak.provider.ProviderConfigProperty; /* * @author sid */ public class EnableIfRequireFactory extends IdpCreateUserIfUniqueAuthenticatorFactory { public static final String PROVIDER_ID = "idp-enable-user-if-require"; static CreateIfRequire SINGLETON = new CreateIfRequire(); public static final String REQUIRE_PASSWORD_UPDATE_AFTER_REGISTRATION = "require.password.update.after.registration"; @Override public Authenticator create(KeycloakSession session) { return SINGLETON; } @Override public void init(Config.Scope config) { } @Override public String getId() { return PROVIDER_ID; } @Override public String getDisplayType() { return "Enable User When Require"; } @Override public String getHelpText() { return "Enable user when require"; } private static final List configProperties = new ArrayList(); static { ProviderConfigProperty property; property = new ProviderConfigProperty(); property.setName(REQUIRE_PASSWORD_UPDATE_AFTER_REGISTRATION); property.setLabel("Require Password Update"); property.setType(ProviderConfigProperty.BOOLEAN_TYPE); property.setHelpText("You are required to update password when user will be created"); configProperties.add(property); } @Override public List getConfigProperties() { return configProperties; } } &lt;/pre&gt; &lt;h2&gt;Organize and compile the Keycloak custom authenticator&lt;/h2&gt; &lt;p&gt;In this section, we&amp;#8217;ll use Maven to organize the mobile authentication project and compile our two new classes.&lt;/p&gt; &lt;h3&gt;Set up the project&lt;/h3&gt; &lt;p&gt;Execute the following command to create a project using Maven:&lt;/p&gt; &lt;pre&gt;mvn archetype:generate -DgroupId=com.sid.keycloakauthenticator -DartifactId=keycloak-authenticator -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false &lt;/pre&gt; &lt;p&gt;Place both of the classes that we&amp;#8217;ve just created in the &lt;code&gt;src/main/java/com/sid/keycloakauthenticator&lt;/code&gt; path.&lt;/p&gt; &lt;p&gt;Now, create a file named &lt;code&gt;org.keycloak.authentication.AuthenticatorFactory&lt;/code&gt; at &lt;code&gt;src/main/resources/META-INF/services&lt;/code&gt;. Add an entry for the new &lt;code&gt;AuthenticationFactory&lt;/code&gt;: &lt;code&gt;com.sid.keycloakauthenticator.EnableIfRequireFactory&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Resolve the project dependencies&lt;/h3&gt; &lt;p&gt;The Keycloak authentication module is a private SPI, so you are required to use the &lt;code&gt;MANIFEST.MF&lt;/code&gt; to resolve dependencies. Make the following entry in the &lt;code&gt;MANIFEST.MF&lt;/code&gt; at the line &lt;code&gt;src/main/resources/META-INF&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;Dependencies: org.keycloak.keycloak-server-spi-private, org.keycloak.keycloak-services, org.keycloak.keycloak-core, org.keycloak.keycloak-server-spi &lt;/pre&gt; &lt;p&gt;You can now edit the Maven &lt;code&gt;pom.xml&lt;/code&gt; to add the following dependencies:&lt;/p&gt; &lt;pre&gt; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.keycloak&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;keycloak-core&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;4.8.3.Final&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.keycloak&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;keycloak-server-spi&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;4.8.3.Final&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.keycloak&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;keycloak-server-spi-private&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;4.8.3.Final&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.jboss.logging&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;jboss-logging&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;3.4.0.Final&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.keycloak&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;keycloak-services&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;4.8.3.Final&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;h3&gt;Build and deploy the project&lt;/h3&gt; &lt;p&gt;Execute the following command to build the project:&lt;/p&gt; &lt;pre&gt;mvn clean install &lt;/pre&gt; &lt;p&gt;This command generates output in the &lt;code&gt;keycloak-authenticator-1.0-SNAPSHOT.jar&lt;/code&gt; target folder. Keycloak ships bundled with &lt;a target="_blank" rel="nofollow" href="https://www.wildfly.org/"&gt;WildFly&lt;/a&gt;, so you can use the &lt;code&gt;jboss-cli&lt;/code&gt; interface and the following command to deploy the JAR:&lt;/p&gt; &lt;pre&gt;deploy /path/to/keycloak-authenticator-1.0-SNAPSHOT.jar &lt;/pre&gt; &lt;h3&gt;Configure the custom authentication flow&lt;/h3&gt; &lt;p&gt;After you&amp;#8217;ve successfully deployed the authenticator JAR, you will configure the authentication flow. Here&amp;#8217;s how to configure a custom flow in Keycloak:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Log into the Keycloak management console, select the realm where you want to configure the custom mobile authenticator, and click on &lt;b&gt;Authentication&lt;/b&gt; in the left-side panel.&lt;/li&gt; &lt;li&gt;In the &lt;b&gt;Flow&lt;/b&gt; tab, select &lt;strong&gt;First Broker Login&lt;/strong&gt; from the drop-down list.&lt;/li&gt; &lt;li&gt;Click the &lt;strong&gt;Copy&lt;/strong&gt; button and name the flow; for example, CustomBrokerFlow.&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Add Execution&lt;/strong&gt; and select &lt;b&gt;Enable User When Require&lt;/b&gt; in the provider drop-down list&lt;/li&gt; &lt;li&gt;Place the executor just after &lt;b&gt;Create User If Unique&lt;/b&gt;&lt;/li&gt; &lt;li&gt;Now, this authentication flow can be used against the associated identity provider&amp;#8217;s &lt;b&gt;First Login Flow&lt;/b&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#38;linkname=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F30%2Fhow-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering%2F&amp;#038;title=How%20to%20restrict%20user%20authentication%20in%20Keycloak%20during%20identity%20brokering" data-a2a-url="https://developers.redhat.com/blog/2020/12/30/how-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering/" data-a2a-title="How to restrict user authentication in Keycloak during identity brokering"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/30/how-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering/"&gt;How to restrict user authentication in Keycloak during identity brokering&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-yK8YaPzU_Y" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;As per the design, Keycloak imports all users into its local database if the users are authenticated via any third-party identity provider (e.g., Google, Facebook, or Okta). But what if users authenticated through the third-party identity provider have to be restricted—or be allowed only limited access—to applications that are federated with Keycloak? Here&amp;#8217;s how you [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/30/how-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering/"&gt;How to restrict user authentication in Keycloak during identity brokering&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/30/how-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">816517</post-id><dc:creator>Siddhartha De</dc:creator><dc:date>2020-12-30T08:00:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/30/how-to-restrict-users-being-authenticated-in-keycloak-during-identity-brokering/</feedburner:origLink></entry><entry><title>Integrating Red Hat Single Sign-On version 7.4 with Red Hat Directory Server (LDAP)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/aw3L0dNEPwU/" /><category term="Linux" /><category term="Red Hat SSO" /><category term="Security" /><category term="directory server" /><category term="keycloak" /><category term="ldap" /><category term="SSO" /><category term="sync users" /><author><name>orivat</name></author><id>https://developers.redhat.com/blog/?p=796417</id><updated>2020-12-29T08:00:20Z</updated><published>2020-12-29T08:00:20Z</published><content type="html">&lt;p&gt;This article describes the integration of &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/products/red-hat-single-sign-on"&gt;Red Hat Single Sign-On (SSO)&lt;/a&gt; with &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/products/red-hat-directory-server"&gt;Red Hat Directory Server&lt;/a&gt; 11 (LDAP). It also illustrates how it is possible to perform user synchronization and group synchronization between Red Hat Directory Server and Red Hat&amp;#8217;s single sign-on tools.&lt;/p&gt; &lt;h2&gt;Install Red Hat Directory Server 11&lt;/h2&gt; &lt;p&gt;To install Red Hat Directory Server 11, you first need an active Red Hat Directory Server subscription (which you can get using the subscription-manager). Once you have this, do the following.&lt;/p&gt; &lt;h3&gt;Install the Red Hat Directory Server 11 package&lt;/h3&gt; &lt;p&gt;Install the Red Hat Directory Server 11 package with:&lt;/p&gt; &lt;pre&gt;# yum module install redhat-ds:11 &lt;/pre&gt; &lt;p&gt;For more details, see chapter: &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_directory_server/11/html/installation_guide/assembly_installing-the-directory-server-packages_installation-guide#proc_installing-the-directory-server-packages_assembly_installing-the-directory-server-packages"&gt;1.1. Installing the Directory Server packages.&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Create a Red Hat Directory Server instance&lt;/h3&gt; &lt;p&gt;Create a new LDAP instance on port 2389, with the database suffix &lt;code&gt;dc=example,dc=com&lt;/code&gt;:&lt;/p&gt; &lt;pre style="padding-left: 40px;"&gt;dscreate interactive Install Directory Server (interactive mode) Enter system's hostname [host1.remote.csb]: Enter the instance name [jdoe]: ds2389 Enter port number []: 2389 Create self-signed certificate database [yes]: Enter secure port number []: 2636 Enter Directory Manager DN [cn=Directory Manager]: Enter the Directory Manager password: Confirm the Directory Manager Password: Enter the database suffix (or enter "none" to skip) [dc=jdoe,dc=remote,dc=csb]: dc=example,dc=com Create sample entries in the suffix [no]: yes Do you want to start the instance after the installation? [yes]: Are you ready to install? [no]: yes Starting installation... Completed installation for ds2389 &lt;/pre&gt; &lt;h3&gt;Populate the ds2389 instance&lt;/h3&gt; &lt;p&gt;Populate the new instance ds2389 with  the-existing example Example.ldif using the command &lt;code&gt;ldif2db&lt;/code&gt;. To do so:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Stop the ds2389 instance:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# dsctl ds2389 stop Instance "ds2389" has been stopped&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Import the ldif example:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# dsctl ds2389 ldif2db userroot /usr/share/dirsrv/data/Example.ldif ldif2db successful&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Restart the instance:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# dsctl ds2389 start Instance "ds2389" has been started&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Set the instance to start automatically when the machine boots:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;# systemctl enable dirsrv@ds2389&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: For more information, see the Red Hat Directory Server documentation: &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_directory_server/11/html/administration_guide/starting_and_stopping-ds"&gt;1.5. STARTING AND STOPPING A DIRECTORY SERVER INSTANCE&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Connect to the LDAP instance&lt;/h3&gt; &lt;p&gt;Connect to the LDAP instance with an LDAP browser, such as &lt;a target="_blank" rel="nofollow" href="http://jxplorer.org/"&gt;JXplorer.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The information to connect are:&lt;/p&gt; &lt;pre style="padding-left: 80px;"&gt;Connection URL: ldap://localhost:2389 Username: cn=Directory Manager password: &amp;#60;ds28389-password&amp;#62;&lt;/pre&gt; &lt;div id="attachment_796647" style="width: 651px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/10/RH-DS_2389.png"&gt;&lt;img aria-describedby="caption-attachment-796647" class="wp-image-796647" src="https://developers.redhat.com/blog/wp-content/uploads/2020/10/RH-DS_2389-300x109.png" alt="JXplorer showing an example LDAP entry." width="641" height="232" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/10/RH-DS_2389-300x109.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/RH-DS_2389-768x278.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/RH-DS_2389.png 995w" sizes="(max-width: 641px) 100vw, 641px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-796647" class="wp-caption-text"&gt;Figure 1: Explore the example ldif in JXplorer.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Install and deploy a Red Hat SSO instance&lt;/h2&gt; &lt;p&gt;Now it&amp;#8217;s time to install and deploy your Red Hat Single Sign-On instance.&lt;/p&gt; &lt;h3&gt;Install Red Hat SSO&lt;/h3&gt; &lt;p&gt;To install Red Hat SSO:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Download the &lt;code&gt;rh-sso&lt;/code&gt; zip distribution.&lt;/li&gt; &lt;li&gt;Unzip &lt;code&gt;rh-sso&lt;/code&gt; with:&lt;/li&gt; &lt;/ol&gt; &lt;pre class="programlisting language-bash" style="padding-left: 40px;"&gt;unzip rh-sso-&amp;#60;release-number&amp;#62;.zip&lt;/pre&gt; &lt;p&gt;For further details about installation, see &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.3/html/getting_started_guide/install-boot#installing_the_server"&gt;Getting Guide Started Guide, section  2.1. Installing the Server.&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Red Hat SSO instance deployment&lt;/h3&gt; &lt;p&gt;To boot the Red Hat Single Sign-On server, go to the &lt;code class="literal"&gt;bin&lt;/code&gt; directory of the server distribution and run the &lt;code class="literal"&gt;standalone&lt;/code&gt; boot script:&lt;/p&gt; &lt;pre&gt;cd bin ./standalone.sh&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;Open &lt;a class="link" target="_blank" rel="nofollow" href="http://localhost:8080/auth"&gt;http://localhost:8080/auth&lt;/a&gt; in your web browser. The welcome page will indicate that the server is running.&lt;/li&gt; &lt;li&gt;Enter a username and password to create an initial admin user.&lt;/li&gt; &lt;li&gt;Create an LDAP Realm as shown in Figure 2.&lt;/li&gt; &lt;/ul&gt; &lt;div id="attachment_846647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe3024219153.png"&gt;&lt;img aria-describedby="caption-attachment-846647" class="wp-image-846647 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe3024219153-1024x565.png" alt="RH-SSO admin console with ldap realm" width="640" height="353" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe3024219153-1024x565.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe3024219153-300x165.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe3024219153-768x424.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe3024219153.png 1144w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-846647" class="wp-caption-text"&gt;Figure 2: RH-SSO admin console with ldap realm&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Integrate Red Hat&amp;#8217;s single sign-on tools and Red Hat Directory Server&lt;/h2&gt; &lt;p&gt;Now that you have Red Hat&amp;#8217;s single sign-on tools installed, you have a dedicated realm for your LDAP test. Do the following to set up the integration.&lt;/p&gt; &lt;h3&gt;Federate LDAP users&lt;/h3&gt; &lt;p&gt;In order to connect to the running Red Hat Directory Server ds2389 instance, select the &lt;strong&gt;User Federation&lt;/strong&gt; tab, and select &lt;strong&gt;ldap provider&lt;/strong&gt;&lt;em&gt;. &lt;/em&gt;In addition, you have to provide the following information:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Vendor&lt;/strong&gt;: &lt;code&gt;Red Hat Directory Server&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Username LDAP attribute&lt;/strong&gt;: &lt;code&gt;uid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;RDN LDAP attribute&lt;/strong&gt;: &lt;code&gt;cn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;UUID LDAP attribute&lt;/strong&gt;: &lt;code&gt;nsuniqueid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;User Object Classes&lt;/strong&gt;: &lt;code&gt;InetOrgPerson, organizatioalPerson&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Connection URL&lt;/strong&gt;: &lt;code&gt;ldap://localhost:2389&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Users DN&lt;/strong&gt;: &lt;code&gt;ou=people,dc=example,dc=com&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Bind Type&lt;/strong&gt;: &lt;code&gt;simple&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Bind DN&lt;/strong&gt;: &lt;code&gt;cn=Directory Manager&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Search Scope&lt;/strong&gt;: &lt;code&gt;Subtree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For the other fields, pick the default purpose value, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_846667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe30906cd059.png"&gt;&lt;img aria-describedby="caption-attachment-846667" class="wp-image-846667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe30906cd059-1024x644.png" alt="Configure your LDAP provider for user federation." width="640" height="403" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe30906cd059-1024x644.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe30906cd059-300x189.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe30906cd059-768x483.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/12/img_5fe30906cd059.png 1517w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-846667" class="wp-caption-text"&gt;Figure 3: Configure your LDAP provider for user federation.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Synchronize single sign-on and LDAP users&lt;/h3&gt; &lt;p&gt;Once all of the settings are entered, you can synchronize users either manually or automatically using the Sync Settings, as shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_796707" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_user_stnchronization.png"&gt;&lt;img aria-describedby="caption-attachment-796707" class="wp-image-796707 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_user_stnchronization-1024x425.png" alt="Under Sync Settings is Cache Settings, which has buttons. Either Synchronize button lets you sync LDAP &amp;#38; SSO users." width="640" height="266" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_user_stnchronization-1024x425.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_user_stnchronization-300x124.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_user_stnchronization-768x319.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_user_stnchronization.png 1039w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-796707" class="wp-caption-text"&gt;Figure 4: Synchronize your SSO and LDAP users.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To synchronize users:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Manually: Select either &lt;strong&gt;Synchronize all users&lt;/strong&gt; or &lt;strong&gt;Synchronized changed users&lt;/strong&gt;. The command &lt;strong&gt;Synchronize all users&lt;/strong&gt; can be quite lengthy if you have a large number of LDAP users.&lt;/li&gt; &lt;li&gt;Automatically: Select either &lt;strong&gt;Periodic Full Sync&lt;/strong&gt; or &lt;strong&gt;Periodic Changed Users Sync&lt;/strong&gt;, based on the delta. The most efficient and less time-consuming option is to use a &lt;strong&gt;Periodic Changed Users Sync&lt;/strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once the sync finishes, your LDAP users become visible at the SSO level as shown in Figure 5. When synchronization is active, newly created LDAP users will also be synchronized and created at this level (upon the next synchronization).&lt;/p&gt; &lt;div id="attachment_796747" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_users.png"&gt;&lt;img aria-describedby="caption-attachment-796747" class="wp-image-796747 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_users-1024x266.png" alt="Ldaptest &amp;#62; Manage &amp;#62; Users with the LDAP users now populated" width="640" height="166" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_users-1024x266.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_users-300x78.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/ldap_users-768x200.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-796747" class="wp-caption-text"&gt;Figure 5: Verify that your LDAP users now show up.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Synchronize Red Hat Single Sign On and Red Hat Directory Server via groups&lt;/h2&gt; &lt;p&gt;It is also possible to perform group synchronization between Red Hat Directory Server and Red Hat&amp;#8217;s single sign-on tools. In order to achieve this, you have to create a mapper of type group-ldap-mapper.&lt;/p&gt; &lt;h4&gt;Configure a group LDAP mapper&lt;/h4&gt; &lt;p&gt;In the Group-ldap-mapper section, provide the following fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Mapper Type&lt;/strong&gt;: &lt;code&gt;group-ldap-mapper&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LDAP Groups DN&lt;/strong&gt;: &lt;code&gt;ou=groups,dc=example,dc=com&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Group Name LDAP Attribute&lt;/strong&gt;: &lt;code&gt;cn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Group Object Classes&lt;/strong&gt;: &lt;code&gt;groupOfUniqueNames&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Membership LDAP Attribute&lt;/strong&gt;: &lt;code&gt;uniqueMember&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Membership User LDAP Attribute&lt;/strong&gt;: &lt;code&gt;uid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Member-Of LDAP Attribute&lt;/strong&gt;: &lt;code&gt;memberOf&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For all the other fields, pick the default value as shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_796777" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_ldap_mapper.png"&gt;&lt;img aria-describedby="caption-attachment-796777" class="wp-image-796777 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_ldap_mapper-1024x787.png" alt="Ldaptest &amp;#62; User Federation &amp;#62; Group-ldap-mapper filled in with the specified values." width="640" height="492" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_ldap_mapper-1024x787.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_ldap_mapper-300x231.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_ldap_mapper-768x590.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_ldap_mapper.png 1215w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-796777" class="wp-caption-text"&gt;Figure 6: Synchronize your SSO and LDAP groups.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;3.2 Synchronize your groups&lt;/h3&gt; &lt;p&gt;It is only possible to perform group synchronization manually. You can perform group synchronization from Red Hat&amp;#8217;s single sign-on tools to LDAP with the &lt;strong&gt;Sync Ldap Group to Keycloak &lt;/strong&gt;button, and also from LDAP to Red Hat&amp;#8217;s single sign-on tools with the &lt;strong&gt;Sync Keycloak Groups to LDAP&lt;/strong&gt; button&lt;em&gt;.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;After group synchronization, all of the groups have been imported into SSO with their corresponding members, as shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_796827" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_rh_sso.png"&gt;&lt;img aria-describedby="caption-attachment-796827" class="wp-image-796827 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_rh_sso-1024x298.png" alt="Ldaptest &amp;#62; Manage &amp;#62; Groups with the LDAP groups now added and populated" width="640" height="186" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_rh_sso-1024x298.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_rh_sso-300x87.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_rh_sso-768x224.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/10/Group_rh_sso.png 1531w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-796827" class="wp-caption-text"&gt;Figure 7: Verify that your LDAP groups now show up.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#38;linkname=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F29%2Fintegrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap%2F&amp;#038;title=Integrating%20Red%20Hat%20Single%20Sign-On%20version%207.4%20with%20Red%20Hat%20Directory%20Server%20%28LDAP%29" data-a2a-url="https://developers.redhat.com/blog/2020/12/29/integrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap/" data-a2a-title="Integrating Red Hat Single Sign-On version 7.4 with Red Hat Directory Server (LDAP)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/29/integrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap/"&gt;Integrating Red Hat Single Sign-On version 7.4 with Red Hat Directory Server (LDAP)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/aw3L0dNEPwU" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This article describes the integration of Red Hat Single Sign-On (SSO) with Red Hat Directory Server 11 (LDAP). It also illustrates how it is possible to perform user synchronization and group synchronization between Red Hat Directory Server and Red Hat&amp;#8217;s single sign-on tools. Install Red Hat Directory Server 11 To install Red Hat Directory Server [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/29/integrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap/"&gt;Integrating Red Hat Single Sign-On version 7.4 with Red Hat Directory Server (LDAP)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/29/integrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">796417</post-id><dc:creator>orivat</dc:creator><dc:date>2020-12-29T08:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/29/integrating-red-hat-single-sign-on-version-7-4-with-red-hat-directory-server-ldap/</feedburner:origLink></entry><entry><title>What’s your favorite Kubernetes feature? Hear from the experts</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PALJIw5kL4U/" /><category term="DevNation" /><category term="DevOps" /><category term="Kubernetes" /><category term="Kubernetes DevOps" /><category term="kubernetes health checks" /><category term="kubernetes scheduler" /><category term="Kubernetes show" /><author><name>Sébastien Blanc</name></author><id>https://developers.redhat.com/blog/?p=808077</id><updated>2020-12-28T08:00:38Z</updated><published>2020-12-28T08:00:38Z</published><content type="html">&lt;p&gt;Every week I run &lt;a href="https://developers.redhat.com/devnation/the-show"&gt;DevNation: The Show&lt;/a&gt;, where guests and I discuss today&amp;#8217;s hottest technologies impacting developers and architects—and have a lot of fun. In each episode, I ask my guest: &amp;#8220;What is your favorite Kubernetes feature?&amp;#8221;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/FL-7a9-z6Sw?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s what they have told me so far:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://twitter.com/saturnism"&gt;Ray Tsang&lt;/a&gt;, Developer Advocate at Google, likes the scaling feature but really loves the health checks you can provide for any workload that gets scheduled into your cluster.&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://twitter.com/DaschnerS"&gt;Sebastien Daschner&lt;/a&gt;, Developer Advocate at IBM, simply loves the &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; scheduler. You just tell the cluster you want to run a particular workload and the scheduler takes care of everything!&lt;/li&gt; &lt;li&gt;&lt;a href="https://twitter.com/aurelievache"&gt;Aurélie Vache&lt;/a&gt;, Cloud DevOps at Continental, like Ray, also loves the scaling features. Being able, with just one command, to scale your application to one, two, or even 10 replicas is something that is still magic for her. She also really likes the Horizontal Pod Scaler.&lt;/li&gt; &lt;li&gt;And finally, &lt;a target="_blank" rel="nofollow" href="https://twitter.com/nicolas_frankel"&gt;Nicolas Frankel&lt;/a&gt;, Developer Advocate at Hazelcast, mentioned a less known feature, the init containers, which can help run some tasks that are needed before you run your actual workload container. You can find &lt;a target="_blank" rel="nofollow" href="https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"&gt;more info about init containers here&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you want to hear more from Kubernetes experts but also have fun by playing interactive games, you should join the show each week. You can catch up on &lt;a target="_blank" rel="nofollow" href="https://www.youtube.com/watch?v=Lyl61jJqY9o&amp;#38;list=PLf3vm0UK6HKpbZvVaYjOmnvnVXBkHPvms"&gt;previous episodes in this playlist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#38;linkname=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F28%2Fwhats-your-favorite-kubernetes-feature-hear-from-the-experts%2F&amp;#038;title=What%E2%80%99s%20your%20favorite%20Kubernetes%20feature%3F%20Hear%20from%20the%20experts" data-a2a-url="https://developers.redhat.com/blog/2020/12/28/whats-your-favorite-kubernetes-feature-hear-from-the-experts/" data-a2a-title="What’s your favorite Kubernetes feature? Hear from the experts"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/28/whats-your-favorite-kubernetes-feature-hear-from-the-experts/"&gt;What&amp;#8217;s your favorite Kubernetes feature? Hear from the experts&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PALJIw5kL4U" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Every week I run DevNation: The Show, where guests and I discuss today&amp;#8217;s hottest technologies impacting developers and architects—and have a lot of fun. In each episode, I ask my guest: &amp;#8220;What is your favorite Kubernetes feature?&amp;#8221; Here&amp;#8217;s what they have told me so far: Ray Tsang, Developer Advocate at Google, likes the scaling feature [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/28/whats-your-favorite-kubernetes-feature-hear-from-the-experts/"&gt;What&amp;#8217;s your favorite Kubernetes feature? Hear from the experts&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/28/whats-your-favorite-kubernetes-feature-hear-from-the-experts/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">808077</post-id><dc:creator>Sébastien Blanc</dc:creator><dc:date>2020-12-28T08:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/28/whats-your-favorite-kubernetes-feature-hear-from-the-experts/</feedburner:origLink></entry><entry><title>2020 Time Zone Database (tzdata) changes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BLFK4lit79U/" /><category term="Linux" /><category term="Open source" /><category term="Fedora" /><category term="glibc" /><category term="RHEL" /><category term="strftime" /><category term="tzdata" /><category term="zic rhel" /><author><name>Patsy Griffin</name></author><id>https://developers.redhat.com/blog/?p=830957</id><updated>2020-12-25T08:00:40Z</updated><published>2020-12-25T08:00:40Z</published><content type="html">&lt;p style="text-align: left;"&gt;Daylight saving time transitions, a zone name change, and the removal of some obsolete files: These are some of the changes that occurred in the Time Zone Database (tzdata) package that provides Red Hat Enterprise Linux (RHEL) and applications with time zone information.&lt;/p&gt; &lt;p style="text-align: left;"&gt;The GNU C Library (glibc) makes use of the tzdata package in order to make APIs such as strftime() work correctly, while applications such as /usr/bin/date make use of this information to print the local date. The tzdata package contains the data files documenting both current and historic transitions for various time zones around the world. This data represents changes required by local government bodies or by time zone boundary changes, as well as changes to UTC offsets and daylight saving time (DST).&lt;/p&gt; &lt;p style="text-align: left;"&gt;In 2020, there were four upstream releases of the tzdata package:&lt;/p&gt; &lt;ul&gt; &lt;li style="text-align: left;"&gt;Most changes related to daylight saving time (DST) start and end date transitions. These included Africa/Casablanca, Antarctica/Casey, Pacific/Fiji, Asia/Gaza and Asia/Hebron. Additionally, Canada&amp;#8217;s Yukon, represented by the America/Whitehorse and America/Dawson time zones, changed to use UTC-07 permanently.&lt;/li&gt; &lt;li style="text-align: left;"&gt;There are rarely zone name changes but in 2020, the upstream project renamed America/Godthab to better reflect current usage in English, now America/Nuuk.&lt;/li&gt; &lt;li style="text-align: left;"&gt;Some obsolete files were removed in 2020. These include pacificnew, systemv, and yearistype.sh. However, it was discovered that the removal of pacificnew could cause some applications to fail. An empty version of the pacificnew file was added in the rearguard data format version of tzdata to prevent these failures. For more information on the rearguard data format, see &lt;em&gt;&lt;a href="https://developers.redhat.com/blog/2019/02/22/time-zone-data-tzdata-2018-data-format-changes-and-red-hat-enterprise-linux/"&gt;Time zone data (tzdata): 2018 data format changes and Red Hat Enterprise Linux&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt; &lt;li style="text-align: left;"&gt;There were also some changes to the version of zic provided by the upstream project. However, these do not impact Fedora or RHEL users as we use the version of zic provided by glibc.&lt;/li&gt; &lt;/ul&gt; &lt;p style="text-align: left;"&gt;In an effort to maintain the accuracy of the information provided by the time zone database, the upstream project frequently updates past timestamps as new information becomes available. In 2020, there were several corrections to past timestamps going back as far as 1891.&lt;/p&gt; &lt;p style="text-align: left;"&gt;Occasionally, time zone changes are announced without a lot of lead time or with incomplete information. In these cases, we try to plan for different scenarios and rely on the upstream maintainers to make decisions based on their experience. Once an update is ready, we update our sources and our quality assurance, and release engineers help push the update out as quickly as possible.&lt;/p&gt; &lt;p style="text-align: left;"&gt;The upstream time zone project releases updates on the iana.org website. You can also find information about subscribing to the tzdata email list and accessing the archives on this site. The email list includes discussions of proposed changes and corrections, release announcements, and time zone related news references.&lt;/p&gt; &lt;p style="text-align: left;"&gt;For more information on Red Hat Enterprise Linux tzdata updates, see the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/articles/1187353"&gt;Red Hat Enterprise Linux Timezone Data (tzdata) &amp;#8211; Development Status Page.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#38;linkname=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F25%2F2020-time-zone-database-tzdata-changes%2F&amp;#038;title=2020%20Time%20Zone%20Database%20%28tzdata%29%20changes" data-a2a-url="https://developers.redhat.com/blog/2020/12/25/2020-time-zone-database-tzdata-changes/" data-a2a-title="2020 Time Zone Database (tzdata) changes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/25/2020-time-zone-database-tzdata-changes/"&gt;2020 Time Zone Database (tzdata) changes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BLFK4lit79U" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Daylight saving time transitions, a zone name change, and the removal of some obsolete files: These are some of the changes that occurred in the Time Zone Database (tzdata) package that provides Red Hat Enterprise Linux (RHEL) and applications with time zone information. The GNU C Library (glibc) makes use of the tzdata package in [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/25/2020-time-zone-database-tzdata-changes/"&gt;2020 Time Zone Database (tzdata) changes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/25/2020-time-zone-database-tzdata-changes/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">830957</post-id><dc:creator>Patsy Griffin</dc:creator><dc:date>2020-12-25T08:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/25/2020-time-zone-database-tzdata-changes/</feedburner:origLink></entry><entry><title type="html">This Week in JBoss: 25 December 2020</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5qkXPzd8cLA/weekly-2020-12-25.html" /><category term="Christmas" /><category term="2020" /><author><name>Mark Little</name><uri>https://www.jboss.org/people/mark-little</uri><email>do-not-reply@jboss.com</email></author><id>https://www.jboss.org/posts/weekly-2020-12-25.html</id><updated>2020-12-25T00:00:00Z</updated><content type="html">&lt;article class="" data-tags="Christmas, 2020"&gt; &lt;h1&gt;This Week in JBoss: 25 December 2020&lt;/h1&gt; &lt;p&gt;I’m writing this on Christmas Day and have spent the last week or so thinking about what I should put into my traditional 25th of December entry. Then it came to me in that "lightbulb moment": I’d replicate, more or less, what I said to my entire team/org before I went on vacation a few days earlier. It’s a summary of the year and I think it’s relevant for our wider community too. So here it is in a slightly modified form …​&lt;/p&gt; &lt;p&gt;I wanted to spend a few minutes thanking you all for the work and interactions you’ve done over this testing year! I don’t think anyone could have predicted 2020 at the start of the year and I think it’s fair to say that every one of us has been affected in one way or another. Yet if you look back on the year and the accomplishments we’ve achieved as a community, you could be forgiven for thinking this was a normal year!&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Making Quarkus available to all OpenShift customers, which we announced at KubeCon, as well as continuing the innovation within (e.g., Hibernate Reactive, RESTeasy Reactive);&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Knative/Serverless, where we now have 7 Working Group leads out of 15 in the Knative community, we also added Functions to OpenShift Serverless;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;More and more of our technologies become available to Kube developers;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;We continued our close involvement with AdoptOpenJDK (aka Eclipse Adoptium), helping to push it to even greater heights;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;So many great innovations continued around efforts such as Kogito, Strimzi, Camel-K, Eclipse Vert.x, Infinispan, …​&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;We all managed to host, attend, present at countless virtual conferences, workshops and Red Hat Summit; probably enough to realise what we’re all missing from the real things!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Eclipse MicroProfile 4.0 and Eclipse Jakarta EE 9.0 both come to life;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;p&gt;The list could go on and on (e.g., EAP XD, OptaPlanner, …) but my point isn’t so much to call out the successes that this community have helped to drive but rather to illustrate that we were able to do these and more at all! In the climate of 2020, retaining the kind of focus we have and continuing to go above and beyond, as many of you and the teams have, is a testament to Red Hat and our communities, our culture and the supporting bonds you’ve all built up and nurtured. For that alone I thank you and you should all be incredibly proud!&lt;/p&gt; &lt;p&gt;With that in mind, whether or not you celebrate Christmas or intend to take extended time away, make sure you do take time to rest and recharge. Be with your friends and family as much as you can given the continuing Covid situation. Find time to unwind but also congratulate yourself on coming together in 2020 and delivering so much to our communities, partners and customers. I’m not even going to try to predict what 2021 will be like but if we can replicate what we’ve been able to do in 2020, I’m sure we’ll all come through it stronger and together!&lt;/p&gt; &lt;div class="author"&gt; &lt;pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/mark-little.png"&gt;&lt;/pfe-avatar&gt; &lt;span&gt;Mark Little&lt;/span&gt; &lt;/div&gt;&lt;/article&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5qkXPzd8cLA" height="1" width="1" alt=""/&gt;</content><dc:creator>Mark Little</dc:creator><feedburner:origLink>https://www.jboss.org/posts/weekly-2020-12-25.html</feedburner:origLink></entry><entry><title>Use Kebechet machine learning to perform source code operations</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/owH6JmtQDh0/" /><category term="DevOps" /><category term="Machine Learning" /><category term="Python" /><category term="GitHub Issues" /><category term="Jupyter notebook" /><category term="Kebechet" /><category term="PyPi" /><category term="python" /><category term="robotic process automation" /><category term="thoth" /><author><name>Christoph Gorn</name></author><id>https://developers.redhat.com/blog/?p=812887</id><updated>2020-12-24T08:00:30Z</updated><published>2020-12-24T08:00:30Z</published><content type="html">&lt;p&gt;One of the first tools we developed to help us with &lt;a target="_blank" rel="nofollow" href="https://thoth-station.ninja/"&gt;Project Thoth&lt;/a&gt; was &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet"&gt;Kebechet&lt;/a&gt;, which we named for the goddess of freshness and purification. As we separated our software into more and more repositories (each of our Python modules is in its own repository on GitHub), we needed help with releasing new versions and keeping all dependent modules up-to-date. In a team of two and with more than 35 repositories, our process was a major time-burner.&lt;/p&gt; &lt;p&gt;Kebechet is a bit of core infrastructure code that can be extended using managers. The most important &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet/tree/master/kebechet/managers"&gt;Kebechet managers&lt;/a&gt; are &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet/tree/master/kebechet/managers/version"&gt;version manager&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet/tree/master/kebechet/managers/update"&gt;update manager&lt;/a&gt;. The selection of which Kebechet manager to run is configured on a per-repository basis. By using cyborg team members, we wanted interaction with the bot to feel like a human developer. GitHub Issues tells it what to do, and—if something goes wrong—these changes are guarded by pull requests. Continuous testing and code review by other team members are handled the same as code additions from humans.&lt;/p&gt; &lt;p&gt;In sum, Kebechet enables &lt;a target="_blank" rel="nofollow" href="https://enterprisersproject.com/article/2019/5/rpa-robotic-process-automation-how-explain"&gt;robotic process automation&lt;/a&gt; as applied to software development. It allows humans to eliminate repetitive, boring, and error-prone tasks, by doing what developers do best. It writes a piece of code to get the job done.&lt;/p&gt; &lt;h2&gt;Cyborg version manager&lt;/h2&gt; &lt;p&gt;&lt;em&gt;Cutting a release&lt;/em&gt; is a major task in software development, with writing release notes and publishing an artifact as the most visible act. This process is also commonly experienced as boring and time-consuming by most human developers.&lt;/p&gt; &lt;p&gt;For us it was no different, which is why we created a Kebechet manager to:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet/blob/609735637db076304fbcf8157a51751eb66fdbcd/kebechet/managers/version/version.py#L127"&gt;Increment the version string&lt;/a&gt; within a repository.&lt;/li&gt; &lt;li&gt;Create a changelog snippet and add it to the changelog.md file; for example, check out the &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/adviser"&gt;Thoth Adviser&lt;/a&gt; and this &lt;a href="https://github.com/thoth-station/adviser/blob/master/CHANGELOG.md#release-0180-2020-09-24t194426"&gt;Adviser changelog&lt;/a&gt;. Since Kebechet is a cyborg, it acts like a human. To create a new release, Kebechet starts work when there is a GitHub Issue that tells the Kebechet update manager what to do. It might need to create a new major release, patch release, or calendar version (&lt;a target="_blank" rel="nofollow" href="https://calver.org/"&gt;CalVer&lt;/a&gt;) release. As for what releases to act on, that information is (guess) written in code: &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet/blob/609735637db076304fbcf8157a51751eb66fdbcd/kebechet/managers/version/version.py#L52-L72"&gt;_RELEASE_TITLES&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Create a pull request containing the updated changelog and version string change. Again, this action is common to developers and the desired way to respond in Kebechet.&lt;/li&gt; &lt;li&gt;If Kebechet cannot fulfill its task, it &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/kebechet/blob/609735637db076304fbcf8157a51751eb66fdbcd/kebechet/managers/version/version.py#L171"&gt;opens a GitHub issue&lt;/a&gt; to document what happened and what went wrong. From our point of view, this is an important feature because it helps other machine learning applications learn.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Updates all day long&lt;/h2&gt; &lt;p&gt;Kebechet update manager automatically updates dependencies in a repository based on Pipfile, which is most often used, or a requirements.txt file. In this case, an update of dependencies are detected either by Kebechet as it runs on a regular interval, or they are pushed to Kebechet from within Thoth Services Red Hat runs. In its most basic implementation with Pipfile, the update manager simply resolves the Python dependencies to their latest versions and opens a pull request with the resulting Pipfile.lock.&lt;/p&gt; &lt;h2&gt;Evolution&lt;/h2&gt; &lt;p&gt;During our two years of experience with Kebechet, some of the features evolved. First, we updated the version manager because the changelog sections got pretty clumsy, especially when many automated updates occurred. With the support of a 2020 intern, we created &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/glyph"&gt;Glyph&lt;/a&gt;, which uses machine learning and natural language processing to understand commit messages. This knowledge is then used for classifying commits into categories, such as bug-fixes, feature additions, improvements, and so on, and thereby creating smart changelog entries out of commit messages.&lt;/p&gt; &lt;p&gt;The second major update to Kebechet’s features was the introduction of a Thoth Adviser-based update manager that updates Python dependencies using the Thoth recommendation system (see the &lt;a target="_blank" rel="nofollow" href="https://thoth-station.ninja/docs/developers/adviser/index.html"&gt;docs&lt;/a&gt; or &lt;a target="_blank" rel="nofollow" href="https://api.moc.thoth-station.ninja/api/v1/ui/#/Advise/list_advise_python"&gt;API&lt;/a&gt;). The repository automatically updates using the optimal Python packages for the project, without developer assistance. For any issue in the application stack, the Thamos-Advise manager opens an issue with the information and tries to resolve the issue if possible by opening a pull request.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Kebechet can automate some of the basic tasks of software development: Releases, dependency management, checking for the provenance of your application dependencies, or giving general information about your application are other features that can come in handy.&lt;/p&gt; &lt;p&gt;Kebechet is simple to integrate with your GitHub project and uses machine learning to enhance the quality of its service. See &lt;a target="_blank" rel="nofollow" href="http://bit.ly/kebechet-install"&gt;http://bit.ly/kebechet-install&lt;/a&gt; for short installation how-to instructions.&lt;/p&gt; &lt;p&gt;Feel free to contact us at &lt;a target="_blank" rel="nofollow" href="https://github.com/thoth-station/core/issues/new/choose"&gt;GitHub&lt;/a&gt; or &lt;a target="_blank" rel="nofollow" href="https://twitter.com/thothstation"&gt;Twitter&lt;/a&gt; or &lt;a target="_blank" rel="nofollow" href="https://chat.google.com/room/AAAAVjnVXFk"&gt;Hangout&lt;/a&gt;. Let’s start a conversation!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#38;linkname=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F24%2Fuse-kebechet-machine-learning-to-perform-source-code-operations%2F&amp;#038;title=Use%20Kebechet%20machine%20learning%20to%20perform%20source%20code%20operations" data-a2a-url="https://developers.redhat.com/blog/2020/12/24/use-kebechet-machine-learning-to-perform-source-code-operations/" data-a2a-title="Use Kebechet machine learning to perform source code operations"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/24/use-kebechet-machine-learning-to-perform-source-code-operations/"&gt;Use Kebechet machine learning to perform source code operations&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/owH6JmtQDh0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;One of the first tools we developed to help us with Project Thoth was Kebechet, which we named for the goddess of freshness and purification. As we separated our software into more and more repositories (each of our Python modules is in its own repository on GitHub), we needed help with releasing new versions and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/24/use-kebechet-machine-learning-to-perform-source-code-operations/"&gt;Use Kebechet machine learning to perform source code operations&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/24/use-kebechet-machine-learning-to-perform-source-code-operations/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">812887</post-id><dc:creator>Christoph Gorn</dc:creator><dc:date>2020-12-24T08:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/24/use-kebechet-machine-learning-to-perform-source-code-operations/</feedburner:origLink></entry><entry><title>Supersonic, Subatomic gRPC services with Java and Quarkus</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WgeDAJkm5hM/" /><category term="Java" /><category term="Kubernetes" /><category term="Microservices" /><category term="Quarkus" /><category term="gRPC" /><category term="gRPC vs rest" /><category term="interface definition" /><category term="Protobuf" /><category term="strongly typed" /><author><name>Eric Deandrea</name></author><id>https://developers.redhat.com/blog/?p=837647</id><updated>2020-12-23T08:00:15Z</updated><published>2020-12-23T08:00:15Z</published><content type="html">&lt;p&gt;&lt;a href="https://grpc.io" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;gRPC&lt;/a&gt; is an open source &lt;a href="https://en.wikipedia.org/wiki/Remote_procedure_call" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;remote procedure call&lt;/a&gt; (RPC) framework. It was released by Google in 2015 and is now an incubating project within the &lt;a href="https://cncf.io" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Cloud Native Computing Foundation&lt;/a&gt;. This post introduces gRPC while explaining its underlying architecture and how it compares to &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;REST&lt;/a&gt; over HTTP. You&amp;#8217;ll also get started using &lt;a href="https://developers.redhat.com/products/quarkus/getting-started" target="_blank" rel="noopener noreferrer"&gt;Quarkus&lt;/a&gt; to implement and consume gRPC services.&lt;/p&gt; &lt;h2&gt;Remote method calling in gRPC&lt;/h2&gt; &lt;p&gt;Wait, what’s this? Did you say remote method calling? Isn’t that something we did in the ‘90s with things like &lt;a href="https://www.corba.org/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;CORBA&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Java_remote_method_invocation" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;RMI&lt;/a&gt;, and &lt;a href="https://en.wikipedia.org/wiki/XML-RPC" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;XML-RPC&lt;/a&gt;/&lt;a href="https://en.wikipedia.org/wiki/SOAP" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;SOAP&lt;/a&gt;?&lt;/p&gt; &lt;p&gt;Well, from a conceptual standpoint, yes. The question is, &amp;#8220;How do those older technologies relate to a modern framework like gRPC?&amp;#8221;&lt;/p&gt; &lt;p&gt;gRPC is similar to CORBA and RMI in that they require generating and using client and server bindings. This, however, is really where the similarities end. The underlying transport mechanisms used and the tooling available for use in today&amp;#8217;s technology frameworks are the main differences.&lt;/p&gt; &lt;p&gt;gRPC uses &lt;a href="https://en.wikipedia.org/wiki/HTTP/2" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;HTTP/2&lt;/a&gt; for transport and &lt;a href="https://developers.google.com/protocol-buffers/docs/proto3" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;protocol buffers&lt;/a&gt; as both its Interface Definition Language (IDL) and as its underlying message interchange format. In addition, tooling is built-into the framework for generating cross-platform client and server bindings for many languages and frameworks.&lt;/p&gt; &lt;h2&gt;Comparing gRPC and REST&lt;/h2&gt; &lt;p&gt;Ok, so you say gRPC uses &lt;a href="https://en.wikipedia.org/wiki/HTTP/2" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;HTTP/2&lt;/a&gt; for transport? I’m already using &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;REST&lt;/a&gt; over HTTP, so why should I care about gRPC?&lt;/p&gt; &lt;p&gt;Contract implementation is a critical difference between the two technologies. In REST, your contract (think &lt;a href="https://www.openapis.org/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;OpenAPI&lt;/a&gt;) focuses more on the resources and uses standard practices around which HTTP &amp;#8220;verbs&amp;#8221; map to which actions on those resources. In most cases, REST uses JSON and XML as the format for the body of requests and responses. These formats are optimized to be human-readable, therefore require processing to be able to be read and produced by machines.&lt;/p&gt; &lt;p&gt;REST also does not offer guidance nor implementation details for implementing contracts. You aren’t required to generate any code to implement your contracts. There is also no standardization as to which tool to use if you do want to generate code that implements the client or server components of a contract.&lt;/p&gt; &lt;p&gt;In contrast to REST&amp;#8217;s focus on resources, gRPC instead focuses on defining services. These definitions specify the methods that can be called on that service with their parameters and return types. As a result, gRPC services are &lt;em&gt;strongly-typed systems&lt;/em&gt;, meaning that the contracts on both ends of a system are well-defined. gRPC also includes client and server code generation tooling out of the box. This enables you, the developer, to focus on building the business logic on the server side and calling the service from the client. The implementation of the communication layer on both ends is generated for you.&lt;/p&gt; &lt;p&gt;Furthermore, the transport &amp;#8220;across the wire&amp;#8221; is optimized to be machine-readable. It nearly eliminates the transformation overhead required by JSON and XML. In addition, gRPC provides support for authentication, tracing, and health monitoring right out of the box! This makes gRPC a framework well-suited for low-latency, highly-scalable distributed systems. On the other hand, gRPC is not a great fit for systems that don’t support one of the binary protocols like protobuf.&lt;/p&gt; &lt;p&gt;In fact, many of the internal services and APIs within &lt;a href="https://kubernetes.io/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Kubernetes&lt;/a&gt; are implemented with gRPC!&lt;/p&gt; &lt;h2&gt;Choosing the right framework&lt;/h2&gt; &lt;p&gt;So where does that leave us? As with most technologies today, choosing one over another isn’t an either/or question. We need to choose the right tool to solve the right problem. Many organizations choose to use REST for public-facing applications and gRPC for internal service-to-service communication.&lt;/p&gt; &lt;p&gt;RESTful endpoints are &lt;a href="https://en.wikipedia.org/wiki/HATEOAS" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;rich with hypermedia&lt;/a&gt; and easy to self-discover. These characteristics make REST an ideal choice when you want to expose services for other organizations (or other business units within an organization) to consume. It&amp;#8217;s easy to proxy RESTful services and use API management to control access to them, enforcing policies like rate limiting, access control, etc.&lt;/p&gt; &lt;p&gt;But what about the web of downstream services that sit behind a public-facing service? Wouldn’t it make sense to have strongly-typed contracts with high-throughput/low-latency between them? gRPC can be as much as &lt;a href="https://blog.dreamfactory.com/grpc-vs-rest-how-does-grpc-compare-with-traditional-rest-apis/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;seven times faster than REST when receiving data and 10 times faster when sending data&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Using gRPC in Quarkus&lt;/h2&gt; &lt;p&gt;Supersonic, Subatomic, Java to the rescue. &lt;a href="https://quarkus.io" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Quarkus&lt;/a&gt; is an optimized &lt;a href="https://developers.redhat.com/topics/enterprise-java" target="_blank" rel="noopener noreferrer"&gt;Java stack&lt;/a&gt; crafted from best-of-breed libraries and standards and tailored for OpenJDK HotSpot and GraalVM. Support for gRPC was &lt;a href="https://quarkus.io/blog/quarkus-grpc/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;introduced to Quarkus in version 1.5&lt;/a&gt;. As you&amp;#8217;ll see, Quarkus makes it really easy to implement and consume gRPC services.&lt;/p&gt; &lt;h3&gt;Implementing a gRPC service&lt;/h3&gt; &lt;p&gt;After adding the Quarkus gRPC extension (&lt;code&gt;mvn quarkus:add-extension -Dextensions=”grpc”&lt;/code&gt;) you only need to define your &lt;a href="https://developers.google.com/protocol-buffers/docs/proto3" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;protobuf&lt;/a&gt; files in your &lt;code&gt;src/main/proto&lt;/code&gt; directory. One such example (&lt;code&gt;helloworld.proto&lt;/code&gt;) might look like:&lt;/p&gt; &lt;pre style="padding-left: 40px;"&gt;syntax = "proto3"; option java_multiple_files = true; option java_package = "io.quarkus.example"; option java_outer_classname = "HelloWorldProto"; package helloworld; // The greeting service definition. service Greeter { // Sends a greeting rpc SayHello (HelloRequest) returns (HelloReply) {} } // The request message containing the user's name. message HelloRequest { string name = 1; } // The response message containing the greetings message HelloReply { string message = 1; }&lt;/pre&gt; &lt;p&gt;When you run &lt;code&gt;mvn compile&lt;/code&gt; , the &lt;a href="https://quarkus.io/guides/maven-tooling" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Quarkus maven plugin&lt;/a&gt; triggers the gRPC generator to generate the gRPC base implementation classes. Quarkus also generates a &lt;a href="https://quarkus.io/guides/grpc-service-implementation#health-check" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;health check service&lt;/a&gt; for you so clients (like the Kubernetes scheduler for instance) can check whether or not your service is alive.&lt;/p&gt; &lt;p&gt;Next, you need to decide if you will implement a &lt;a href="https://quarkus.io/guides/grpc-service-implementation#implementing-a-service-with-the-default-grpc-api" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;blocking service&lt;/a&gt;, a &lt;a href="https://quarkus.io/guides/grpc-service-implementation#implementing-a-service-with-the-mutiny-api" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;reactive service&lt;/a&gt; (using the &lt;a href="https://smallrye.io/smallrye-mutiny/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Mutiny reactive library&lt;/a&gt;), or a &lt;a href="https://quarkus.io/guides/grpc-service-implementation#handling-streams" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;service that returns streams of data&lt;/a&gt;. gRPC provides all of the necessary base implementation classes to extend and implement your business functionality. When running in Quarkus’ &lt;a href="https://quarkus.io/guides/maven-tooling#development-mode" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;dev mode&lt;/a&gt;, the gRPC &lt;a href="https://quarkus.io/guides/grpc-service-implementation#reflection-service" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;reflection service&lt;/a&gt; is automatically enabled. The reflection service makes it possible for tools like &lt;a href="https://github.com/fullstorydev/grpcurl" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;grpcurl&lt;/a&gt; or &lt;a href="https://github.com/gusaul/grpcox" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;grpcox&lt;/a&gt; to interact with your service, or for other client services to call your service.&lt;/p&gt; &lt;h3&gt;Consuming a gRPC service&lt;/h3&gt; &lt;p&gt;Consuming a gRPC service is similar to implementing one. First, the gRPC extension needs to be added to your project. Second, you need to define your protobuf files. When compiling, the &lt;a href="https://quarkus.io/guides/maven-tooling" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Quarkus maven plugin&lt;/a&gt; generates the client stubs in both blocking and reactive versions. You can then inject them into your application by using one of the following:&lt;/p&gt; &lt;pre&gt;@Inject @GrpcService("hello-service") MutinyGreeterGrpc.MutinyGreeterStub mutinyHelloService; @Inject @GrpcService("hello-service") GreeterGrpc.GreeterBlockingStub blockingHelloService; @Inject @GrpcService("hello-service") Channel channel;&lt;/pre&gt; &lt;p&gt;Finally, you can use the client stubs to make calls to the service. Here is how you would expose a REST API that calls a gRPC service:&lt;/p&gt; &lt;pre&gt;@GET @Path("/blocking/{name}") public String helloBlocking(@PathParam("name") String name) { return this.blockingHelloService .sayHello( HelloRequest.newBuilder() .setName(name) .build() ).getMessage(); } @GET @Path("/mutiny/{name}") public Uni&amp;#60;String&amp;#62; helloMutiny(@PathParam("name") String name) { return this.mutinyHelloService .sayHello( HelloRequest.newBuilder() .setName(name) .build() ) .onItem() .transform(HelloReply::getMessage); }&lt;/pre&gt; &lt;p&gt;Now that wasn’t too hard! Quarkus really does make this easy!&lt;/p&gt; &lt;h2&gt;Wrap-up&lt;/h2&gt; &lt;p&gt;If you want to see more of these examples, check out these short videos that showcase everything in action.&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;strong&gt;How to Implement a Blocking gRPC Service on Quarkus (Part 1)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/hecjU-Iixf8?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p style="text-align: center;"&gt;&lt;strong&gt;How to Consume a Reactive gRPC Service on Quarkus Mutiny (Part 2)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/KEggeANxGes?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;I also recommend &lt;a href="https://www.youtube.com/watch?v=anGcuMJPkQY" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Quarkus &amp;#8220;Q&amp;#8221; Tip &amp;#8211; Discover the Quarkus GRPC extension&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Want to learn more about Quarkus? Check out &lt;a target="_blank" rel="nofollow" href="https://red.ht/idc-quarkus-study"&gt;this paper&lt;/a&gt; to see how Quarkus can save as much as 64% of cloud resources as compared to other Java frameworks out there.&lt;/p&gt; &lt;p&gt;Commercial support for Quarkus is available as part of &lt;a href="https://www.redhat.com/en/products/runtimes" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Red Hat Runtimes&lt;/a&gt; as well as part of a &lt;a href="https://www.openshift.com/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Red Hat OpenShift&lt;/a&gt; subscription.&lt;/p&gt; &lt;h2&gt;References&lt;/h2&gt; &lt;p&gt;Here are some references for further reading:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://quarkus.io/guides/grpc-getting-started" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Getting started with gRPC on Quarkus&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://quarkus.io/guides/grpc-service-implementation" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Implementing a gRPC service in Quarkus&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://quarkus.io/guides/grpc-service-consumption" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Consuming a gRPC service from Quarkus&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#38;linkname=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F23%2Fsupersonic-subatomic-grpc-services-with-java-and-quarkus%2F&amp;#038;title=Supersonic%2C%20Subatomic%20gRPC%20services%20with%20Java%20and%20Quarkus" data-a2a-url="https://developers.redhat.com/blog/2020/12/23/supersonic-subatomic-grpc-services-with-java-and-quarkus/" data-a2a-title="Supersonic, Subatomic gRPC services with Java and Quarkus"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/23/supersonic-subatomic-grpc-services-with-java-and-quarkus/"&gt;Supersonic, Subatomic gRPC services with Java and Quarkus&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WgeDAJkm5hM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;remote procedure call (RPC) framework. It was released by Google in 2015 and is now an incubating project within the REST over HTTP. You&amp;#8217;ll also get started using Quarkus to implement and consume gRPC services. Remote method calling in gRPC Wait, what’s this? Did you say remote method calling? Isn’t that something we did in [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/23/supersonic-subatomic-grpc-services-with-java-and-quarkus/"&gt;Supersonic, Subatomic gRPC services with Java and Quarkus&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/23/supersonic-subatomic-grpc-services-with-java-and-quarkus/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">837647</post-id><dc:creator>Eric Deandrea</dc:creator><dc:date>2020-12-23T08:00:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/23/supersonic-subatomic-grpc-services-with-java-and-quarkus/</feedburner:origLink></entry><entry><title>.NET 5.0 now available for Red Hat Enterprise Linux and Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/veZoHwF0WU8/" /><category term=".NET Core" /><category term="C#" /><category term="Linux" /><category term="Windows" /><category term=".NET 5" /><category term="garbage collection" /><category term="JIT compiler" /><category term="openshift" /><category term="RHEL" /><author><name>Mauricio "Maltron" Leal</name></author><id>https://developers.redhat.com/blog/?p=840847</id><updated>2020-12-22T08:00:50Z</updated><published>2020-12-22T08:00:50Z</published><content type="html">&lt;p&gt;We&amp;#8217;re excited to announce the general availability of .NET 5.0 on &lt;a href="https://developers.redhat.com/products/rhel/overview"&gt;Red Hat Enterprise Linux&lt;/a&gt; 7, Red Hat Enterprise Linux 8, and &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s new&lt;/h2&gt; &lt;p&gt;.NET 5.0 is the successor of .NET Core 3.1, and &lt;a target="_blank" rel="nofollow" href="https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/"&gt;supersedes .NET Framework&lt;/a&gt; as the preferred target platform for building Windows Forms and WPF applications.&lt;/p&gt; &lt;p&gt;.NET 5.0 includes new language versions C# 9 and F# 5.0. Significant performance improvements were made to the base libraries, GC and JIT. The ASP.NET Core framework has many great new features and improvements, like improved gRPC and Blazor performance, and enabling OpenAPI by default.&lt;/p&gt; &lt;h2&gt;Install .NET 5.0&lt;/h2&gt; &lt;p&gt;.NET 5.0 can be installed on RHEL 7 with the usual:&lt;/p&gt; &lt;pre&gt;# yum install rh-dotnet50 &lt;/pre&gt; &lt;p&gt;On RHEL 8, enter:&lt;/p&gt; &lt;pre&gt;# dnf install dotnet-sdk-5.0 &lt;/pre&gt; &lt;p&gt;The .NET 5.0 SDK and runtime container images are available from the &lt;a target="_blank" rel="nofollow" href="https://catalog.redhat.com/software/containers/search?q=dotnet-50"&gt;Red Hat Container registry&lt;/a&gt;. You can use the container images as standalone images and with OpenShift:&lt;/p&gt; &lt;pre&gt;$ podman run --rm registry.redhat.io/ubi8/dotnet-50 dotnet --version 5.0.100 &lt;/pre&gt; &lt;h2&gt;Support&lt;/h2&gt; &lt;p&gt;.NET 5.0 is a current release. It is scheduled for support until January 2022, three months after the .NET 6.0 release in November 2021. .NET 6.0 will be a long-term support (LTS) release, supported for three years. The previous LTS releases, .NET Core 2.1 and .NET Core 3.1, are supported until August 21, 2021 and December 3, 2022, respectively.&lt;/p&gt; &lt;p&gt;Visit the &lt;a target="_blank" rel="nofollow" href="http://redhatloves.net"&gt;.NET overview page&lt;/a&gt; to learn more about using .NET on Red Hat Enterprise Linux and OpenShift.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#38;linkname=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F12%2F22%2Fnet-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift%2F&amp;#038;title=.NET%205.0%20now%20available%20for%20Red%20Hat%20Enterprise%20Linux%20and%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2020/12/22/net-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift/" data-a2a-title=".NET 5.0 now available for Red Hat Enterprise Linux and Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/22/net-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift/"&gt;.NET 5.0 now available for Red Hat Enterprise Linux and Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/veZoHwF0WU8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We&amp;#8217;re excited to announce the general availability of .NET 5.0 on Red Hat Enterprise Linux 7, Red Hat Enterprise Linux 8, and Red Hat OpenShift Container Platform. What&amp;#8217;s new .NET 5.0 is the successor of .NET Core 3.1, and supersedes .NET Framework as the preferred target platform for building Windows Forms and WPF applications. .NET [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/12/22/net-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift/"&gt;.NET 5.0 now available for Red Hat Enterprise Linux and Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/12/22/net-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">840847</post-id><dc:creator>Mauricio "Maltron" Leal</dc:creator><dc:date>2020-12-22T08:00:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/12/22/net-5-0-now-available-for-red-hat-enterprise-linux-and-red-hat-openshift/</feedburner:origLink></entry><entry><title>JBoss Tools 4.18.0.AM1 for Eclipse 2020-09</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yAn9DkKDMqg/4.18.0.am1.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/4.18.0.am1.html</id><updated>2020-12-23T22:10:46Z</updated><published>2020-12-22T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Happy to announce 4.18.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Downloads available at &lt;a href="https://tools.jboss.org/downloads/jbosstools/2020-09/4.18.0.AM1.html"&gt;JBoss Tools 4.18.0 AM1&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is New?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Full info is at &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.18.0.AM1.html"&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus"&gt;&lt;a class="anchor" href="#quarkus"&gt;&lt;/a&gt;Quarkus&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="support-for-codestarts-in-new-quarkus-project-wizard"&gt;&lt;a class="anchor" href="#support-for-codestarts-in-new-quarkus-project-wizard"&gt;&lt;/a&gt;Support for codestarts in New Quarkus project wizard&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;code.quarkus.io has added a new option codestart that allows extension that support this new feature to contribute sample code in the generated project. It is enabled by default and is accessible from the second step in the wizard:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/quarkus/images/quarkus30.png" alt="quarkus30" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="devfile-based-deployments"&gt;&lt;a class="anchor" href="#devfile-based-deployments"&gt;&lt;/a&gt;Devfile based deployments&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Application Explorer view is now based on odo 2.x, which allows deployments to be based on devfile (developer oriented manifest file). The components from the default odo registry are listed with legacy S2I components:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/devfile.png" alt="devfile" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It is also now possible to bootstrap from an empty project as the components from the registry may expose starter projects (sample code that will initialize your empty project).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/devfile1.png" alt="devfile1" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.25.Final and Hibernate Tools version 5.4.25.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.20.Final and Hibernate Tools version 5.3.20.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="server-tools"&gt;&lt;a class="anchor" href="#server-tools"&gt;&lt;/a&gt;Server Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="wildfly-22-server-adapter"&gt;&lt;a class="anchor" href="#wildfly-22-server-adapter"&gt;&lt;/a&gt;Wildfly 22 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 22.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="cdi-tools"&gt;&lt;a class="anchor" href="#cdi-tools"&gt;&lt;/a&gt;CDI Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="eclipse-microprofile-support"&gt;&lt;a class="anchor" href="#eclipse-microprofile-support"&gt;&lt;/a&gt;Eclipse Microprofile support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;CDI Tools now support Eclipse Microprofile. Eclipse Microprofile related assets are checked against @Inject injections points and are validated according to rules specified in various Eclipse Microprofile specifications.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="forge-tools"&gt;&lt;a class="anchor" href="#forge-tools"&gt;&lt;/a&gt;Forge Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="forge-runtime-updated-to-3-9-8-final"&gt;&lt;a class="anchor" href="#forge-runtime-updated-to-3-9-8-final"&gt;&lt;/a&gt;Forge Runtime updated to 3.9.8.Final&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The included Forge runtime is now 3.9.8.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yAn9DkKDMqg" height="1" width="1" alt=""/&gt;</content><summary>Happy to announce 4.18.0.AM1 (Developer Milestone 1) build for Eclipse 2020-09. Downloads available at JBoss Tools 4.18.0 AM1. What is New? Full info is at this page. Some highlights are below. Quarkus Support for codestarts in New Quarkus project wizard code.quarkus.io has added a new option codestart that allows extension that support this new feature to contribute sample code in the generated project. It is enabled by default and is accessible from the second step in the wizard: OpenShift Devfile based deployments The Application Explorer view is now based on odo 2.x, which allows deployments to be based on devfile (developer oriented manifest file). The components from the default odo registry are listed...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2020-12-22T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/4.18.0.am1.html</feedburner:origLink></entry></feed>
